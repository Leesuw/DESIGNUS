<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/WEB-INF/views/images/" />
	<resources mapping="/css/**" location="/WEB-INF/views/css/" />
	<resources mapping="/js/**" location="/WEB-INF/views/js/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.designus.*" />

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="net.sf.log4jdbc.DriverSpy" />
		<beans:property name="url"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="username" value="DESIGNUS" />
		<beans:property name="password" value="123456" />
	</beans:bean>
	<!-- sqlSessionFactory ::mybatis가 사용 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:com/designus/www/dao/mybatis-conf.xml" />
		<beans:property name="mapperLocations"
			value="classpath:com/**/mapper/*.xml" />
	</beans:bean>
	<!-- DAO using 최종 -->
	<beans:bean id="mDao"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property name="mapperInterface"
			value="com.designus.www.dao.ImemberDao" />
	</beans:bean>
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<tx:annotation-driven
		transaction-manager="transactionManager" />
		
		 <!-- 파일 업로드 설정 -->
       <beans:bean id="multipartResolver"
            class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <beans:property name="defaultEncoding" value="UTF-8"/>
         <beans:property name="maxUploadSize" value="10000000"/><!-- 약 10메가 -->
         <beans:property name="maxInMemorySize" value="10000000"/><!-- 약 10메가 -->
       </beans:bean>
       <!-- Session Interceptor(가로채기) -->
       
</beans:beans>
